<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <log4net>
    <!--*********************************************输出到控制台*******************************************-->
    <appender name="ConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
      <layout type="log4net.Layout.SimpleLayout"/>
      <mapping>
        <level value="FATAL"/>
        <foreColor value="Cyan, HighIntensity"/>
        <!--<backColor value="Red"/>-->
      </mapping>
      <mapping>
        <level value="ERROR"/>
        <foreColor value="Red, HighIntensity"/>
      </mapping>
      <mapping>
        <level value="WARN"/>
        <foreColor value="Yellow, HighIntensity"/>
      </mapping>
      <mapping>
        <level value="DEBUG"/>
        <foreColor value="Green,HighIntensity"/>
      </mapping>
      <mapping>
        <level value="INFO"/>
        <foreColor value="Blue,HighIntensity"/>
      </mapping>
    </appender>
    <!--*********************************************从UDP发出**********************************************-->

    <!--<appender name="UdpAppender1" type="log4net.Appender.UdpAppender">
      <RemoteAddress value="127.0.0.1"/>
      <RemotePort value="2020"/>
      <LocalPort value="23451" />
      <layout type="log4net.Layout.XmlLayout"/>
    </appender>-->

    <!--<appender name="UdpAppender2" type="log4net.Appender.UdpAppender">
      <remoteAddress value="127.0.0.1" />
      <remotePort value="2020" />
      <layout type="log4net.Layout.XmlLayout">
          <locationInfo value="true" />
      </layout>
    </appender>-->

    <appender name="UdpAppender3" type="log4net.Appender.UdpAppender">
      <remoteAddress value="127.0.0.1"/>
      <remotePort value="2020"/>
      <encoding value="utf-8"/>
      <layout type="log4net.Layout.XmlLayout">
        <locationInfo value="true"/>
      </layout>
    </appender>

    <!--***********************************************记录到XML********************************************-->
    <appender name="XmlFileAppender" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString" value="logs\sample-log-%property{SampleDate}.xml"/>
      <!--<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />-->
      <!--最小锁定模型以允许多个进程可以写入同一个文件-->
      <appendToFile value="true"/>
      <datePattern value="yyyyMMdd"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="100"/>
      <!--保留的log文件数量 超过此数量后 自动删除之前的  -->
      <maximumFileSize value="5000KB"/>
      <layout type="log4net.Layout.XmlLayoutSchemaLog4j">
        <locationInfo value="true"/>
      </layout>
    </appender>
    <!--**********************************************记录到TXT文本文件*************************************-->
    <appender name="TxtFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--file value="C:\Sample" /-->
      <file value="logs\Sample.txt"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <!--rollingStyle value="Composite" /-->
      <maxSizeRollBackups value="100"/>
      <maximumFileSize value="600KB"/>
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%n==============================================================================
                                %n【日志级别】%-5level
                                %n【记录时间】%date
                                %n【线程编号】[%thread]
                                %n【执行时间】[%r]毫秒                              
                                %n【文件行号】%L
                                %n【记录类名】%logger
                                %n【日志内容】%message
                                %n【出错文件】%F
                                %newline"/>
      </layout>
    </appender>

    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="${USERPROFILE}\My Documents\Siemens\Siemens\logs\logfile.log" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="10MB" />
      <datePattern value="yyyy\MM\dd\'logfile.log'" />
      <staticLogFileName value="false" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %message%newline" />
      </layout>
    </appender>
    
    <!--**********************************************记录到TXT文本文件********************************************-->
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <param name="File" value="LogLogs\Sample1"/>
      <param name="AppendToFile" value="true"/>
      <param name="RollingStyle" value="Composite"/>
      <param name="MaxSizeRollBackups" value="100"/>
      <param name="MaximumFileSize" value="1MB"/>
      <param name="StaticLogFileName" value="false"/>
      <param name="DatePattern" value="'-'yyyyMMdd'.log'"/>
      <encoding value="utf-8"/>
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="[%p][%d{yyyy/MM/dd HH:mm:ss.fff}] [Thread=%thread] [Flie=%F] [Class=%logger] [Line=%L] [Message=%m]%n%newline"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="DEBUG"/>
        <param name="LevelMax" value="FATAL"/>
      </filter>
    </appender>
    <!--**********************************************记录到TXT文本文件********************************************-->
    <!--定义日志的输出方式-->
    <!--写入回滚文件-->
    <appender name="LogFileAppender1" type="log4net.Appender.RollingFileAppender,log4net">
      <!--日志文件路径，“/”与“/”作用相同，到达的目录相同，文件夹不存在则新建 -->
      <!--按文件大小方式输出时在这里指定文件名，并且当天的日志在下一天时在文件名后自动追加当天日期形成新文件。-->
      <!--按照日期形式输出时，直接连接元素DatePattern的value形成文件路径。此处使用这种方式 -->
      <!--param的名称,可以直接查对应的appender类的属性名即可,这里要查的就是RollingFileAppender类的属性 -->
      <param name="File" value="LogLogs1\\"/>
      <!--是否追加到文件-->
      <param name="AppendToFile" value="true"/>
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <!--使用Unicode编码-->
      <Encoding value="UTF-8"/>
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <param name="MaxSizeRollBackups" value="-1"/>
      <!--是否只写到一个文件中-->
      <param name="StaticLogFileName" value="false"/>
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Date"/>
      <!--按日期产生文件夹和文件名［在日期方式与混合方式下使用］-->
      <!--此处按日期产生文件夹，文件名固定。注意&quot; 的位置-->
      <!--<param name="DatePattern" value="yyyy-MM-dd/&quot;ReflectionLayout.log&quot;"  />-->
      <!--这是按日期产生文件夹，并在文件名前也加上日期-->
      <!--<param name="DatePattern" value="yyyyMMdd/yyyyMMdd&quot;-TimerServer.log&quot;"  />-->
      <!--这是先按日期产生文件夹，再形成下一级固定的文件夹-->
      <!--<param name="DatePattern" value="yyyyMMdd/&quot;TimerServer/TimerServer.log&quot;"  />-->
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。
          超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
          可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <param name="DatePattern" value="yyyyMMdd'.log'"/>
      <param name="maximumFileSize" value="500KB"/>

      <!--<datePattern value="yyyyMMdd" />
      <param name="DatePattern" value="yyyyMMdd\\yyyyMMdd'_logtest.log'" />
      <RollingStyle value="Date" />-->

      <layout type="log4net.Layout.PatternLayout">
        <!--定义appender使用的输出格式-->
        <param name="Header" value="[Header] "/>
        <param name="Footer" value="[Footer] "/>
        <param name="ConversionPattern" value="%d [%t] %-5p %c [%x]  - %m%n"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <!--定义此app使用的过滤器-->
        <param name="LevelMin" value="DEBUG"/>
        <param name="LevelMax" value="FATAL"/>
      </filter>
    </appender>
    <!--***********************************************记录到SQL Server,通过SQL语句***************************************-->
    <appender name="AdoNetAppenderSqlserverUseSQL" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="1"/>
      <connectionType value="System.Data.SqlClient.SqlConnection"/>
      <connectionString value="data source=.;initial catalog=Log4Net;integrated security=false;persist security info=True;User ID=sa;Password=@yun892167ge#"/>
      <commandText value="INSERT INTO Log4NetUseSQL ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)"/>
      <parameter>
        <parameterName value="@log_date"/>
        <dbType value="DateTime"/>
        <layout type="log4net.Layout.RawTimeStampLayout"/>
      </parameter>
      <parameter>
        <parameterName value="@thread"/>
        <dbType value="String"/>
        <size value="255"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level"/>
        <dbType value="String"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger"/>
        <dbType value="String"/>
        <size value="255"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message"/>
        <dbType value="String"/>
        <size value="4000"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception"/>
        <dbType value="String"/>
        <size value="2000"/>
        <layout type="log4net.Layout.ExceptionLayout"/>
      </parameter>
    </appender>

    <!--数据库表结构-->
    <!--CREATE TABLE [dbo].[Log4NetUseSQL](
	        [Date] [datetime] NULL,
	        [Thread] [nvarchar](50) NULL,
	        [Level] [nvarchar](50) NULL,
	        [Logger] [nvarchar](50) NULL,
	        [Message] [nvarchar](50) NULL,
	        [Exception] [nvarchar](50) NULL
        )-->
    <!--***********************************************记录到SqlServer数据库，通过存储过程执行****************************-->
    <appender name="AdoNetAppenderSqlserverUseProcedure" type="log4net.Appender.ADONetAppender">
      <param name="BufferSize" value="1"/>
      <param name="ConnectionType" value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
      <param name="ConnectionString" value="Server=.;Database=Log4Net;User ID=sa;Password=@yun892167ge#;Trusted_Connection=False"/>
      <param name="CommandType" value="StoredProcedure"/>
      <param name="CommandText" value="Log4NetProcedure"/>
      <param name="Parameter">
        <param name="ParameterName" value="@log_date"/>
        <param name="DbType" value="DateTime"/>
        <param name="Layout" type="log4net.Layout.RawTimeStampLayout"/>
      </param>
      <param name="Parameter">
        <param name="ParameterName" value="@thread"/>
        <param name="DbType" value="String"/>
        <param name="Size" value="255"/>
        <param name="Layout" type="log4net.Layout.PatternLayout">
          <param name="ConversionPattern" value="%t"/>
        </param>
      </param>
      <param name="Parameter">
        <param name="ParameterName" value="@log_level"/>
        <param name="DbType" value="String"/>
        <param name="Size" value="50"/>
        <param name="Layout" type="log4net.Layout.PatternLayout">
          <param name="ConversionPattern" value="%p"/>
        </param>
      </param>
      <param name="Parameter">
        <param name="ParameterName" value="@logger"/>
        <param name="DbType" value="String"/>
        <param name="Size" value="255"/>
        <param name="Layout" type="log4net.Layout.PatternLayout">
          <param name="ConversionPattern" value="%c"/>
        </param>
      </param>
      <param name="Parameter">
        <param name="ParameterName" value="@message"/>
        <param name="DbType" value="String"/>
        <param name="Size" value="4000"/>
        <param name="Layout" type="log4net.Layout.PatternLayout">
          <param name="ConversionPattern" value="%m"/>
        </param>
      </param>
      <param name="Parameter">
        <param name="ParameterName" value="@exception"/>
        <param name="DbType" value="String"/>
        <param name="Size" value="2000"/>
        <param name="Layout" type="log4net.Layout.ExceptionLayout"/>
      </param>
    </appender>
    <!--CREATE TABLE [dbo].[Log4NetUseProcedure] (  
        [LogID] [int] IDENTITY (1, 1) NOT NULL ,  
        [LogDate] [datetime] NOT NULL ,  
        [LogThread] [varchar] (255) COLLATE Chinese_PRC_CI_AS NULL ,  
        [LogLevel] [varchar] (50) COLLATE Chinese_PRC_CI_AS NULL ,  
        [Logger] [varchar] (255) COLLATE Chinese_PRC_CI_AS NULL ,  
        [LogMessage] [varchar] (4000) COLLATE Chinese_PRC_CI_AS NULL ,  
        [LogException] [varchar] (2000) COLLATE Chinese_PRC_CI_AS NULL   
      ) ON [PRIMARY]  
      GO 
          
      CREATE PROCEDURE dbo.Log4NetProcedure  
         @log_date datetime,   
         @thread varchar(255),   
         @log_level varchar(50),   
         @logger varchar(255),   
         @message varchar(4000),   
         @exception varchar(2000)  
        as  
        INSERT INTO Log4NetUseProcedure   
        (LogDate,  
         LogThread,  
         LogLevel,  
         Logger,  
         LogMessage,  
         LogException)   
         VALUES
         (@log_date,   
         @thread,   
         @log_level,   
         @logger,   
         @message,   
         @exception)  
        GO   
      -->
    <!--************************************************记录到Windows事件***************************************-->
    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝=====================================
                                %n【日志级别】%-5level
                                %n【记录时间】%date
                                %n【线程编号】[%thread]
                                %n【执行时间】[%r]毫秒
                                %n【出错文件】%F
                                %n【文件行号】%L
                                %n【出错的类】%logger 属性[%property{NDC}]
                                %n【错误描述】%message
                                %n【错误详情】%newline
                                %n＝＝＝＝＝＝＝＝＝＝====================================="/>
      </layout>
    </appender>

    <!--************************************************发送到邮件********************************************-->
    <!--定义邮件发送-->
    <appender name="LogSmtpAppender" type="log4net.Appender.SmtpAppender">
      <authentication value="Basic"/>
      <to value="gecambridge@sina.com"/>
      <!--接收邮件的邮箱-->
      <from value="gecambridge@sina.com"/>
      <!--发送邮件的邮箱-->
      <username value="gecambridge@sina.com"/>
      <!--发送邮件的邮箱-->
      <password value="@yun892167ge#"/>
      <!--发送邮件的密码-->
      <subject value="XXX应用错误日志消息"/>
      <!--邮件主题-->
      <smtpHost value="smtp.sina.com"/>
      <!--发送邮件的服务器-->
      <bufferSize value="2048"/>
      <!--超长部分是否丢弃-->
      <lossy value="true"/>
      <!-- 下面的定义,就是日志级别大于DEBUG的才发邮件.-->
      <evaluator type="log4net.Core.LevelEvaluator">
        <threshold value="DEBUG"/>
      </evaluator>
      <!-- 下面是 定义邮件的格式 （好多换行啊） -->
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%property{log4net:HostName} :: %level :: %message %newlineLogger: %logger%newlineThread: %thread%newlineDate: %date%newlineNDC: %property{NDC}%newline%newline"/>
      </layout>
    </appender>

    <!--***********************************************记录到SqlLite数据库***************************************************-->
    <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="100"/>
      <connectionString value="Data Source=c:\\log4net.db;"/>
      <commandText value="INSERT INTO Log (Date, Level, Logger, Message) VALUES (@Date, @Level, @Logger, @Message)"/>
      <parameter>
        <parameterName value="@Date"/>
        <dbType value="DateTime"/>
        <layout type="log4net.Layout.RawTimeStampLayout"/>
      </parameter>
      <parameter>
        <parameterName value="@Level"/>
        <dbType value="String"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Logger"/>
        <dbType value="String"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Message"/>
        <dbType value="String"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message"/>
        </layout>
      </parameter>
    </appender>
    <!--*************************************************************************************************************-->
    <root>
      <!--系统默认级别，总开关，Appender级别高于这个的才可以记录到日志-->
      <level value="ALL"/>
      <!--<appender-ref ref="UdpAppender"/>
      <appender-ref ref="ConsoleAppender"/>
      <appender-ref ref="XmlFileAppender"/>
      <appender-ref ref="TxtFileAppender" />
      <appender-ref ref="LogFileAppender" />
      <appender-ref ref="LogFileAppender1"/>
      <appender-ref ref="AdoNetAppenderSqlserverUseSQL" />   
      <appender-ref ref="AdoNetAppenderSqlserverUseProcedure" />
      <appender-ref ref="EventLogAppender" />
      <appender-ref ref="LogSmtpAppender" />
      <appender-ref ref="AdoNetAppender" />-->
      <appender-ref ref="TxtFileAppender" />
      
    </root>
  </log4net>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>
</configuration>
